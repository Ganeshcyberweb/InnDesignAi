generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @unique @map("user_id") @db.Uuid
  name      String?
  company   String?
  role      UserRole @default(CLIENT)
  avatar    String?  @map("avatar_url")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  designs   Design[]

  @@map("profiles")
}

model Design {
  id                  String         @id @default(uuid()) @db.Uuid
  userId              String         @map("user_id") @db.Uuid
  description         String?        @map("input_prompt")
  imageUrl            String?        @map("uploaded_image_url")
  customRequirements  String?        @map("ai_model_used")
  status              DesignStatus   @default(COMPLETED)
  createdAt           DateTime       @default(now()) @map("created_at")
  updatedAt           DateTime       @updatedAt @map("updated_at")
  generationNumber    Int            @default(1) @map("generation_number")
  parentId            String?        @map("parent_design_id") @db.Uuid
  budget              Decimal?
  colorPalette        Json?
  colorScheme         String?        @map("color_scheme")
  isPublic            Boolean        @default(false)
  materialPreferences String?        @map("material_preferences")
  mood                String?
  otherRequirements   String?        @map("other_requirements")
  priority            String?
  roomType            String?
  size                String?
  style               String?
  stylePreference     String?        @map("style_preference")
  title               String?
  costBreakdown       Json?          @map("cost_breakdown")
  estimatedCost       Float?         @map("estimated_cost")
  paybackTimeline     String?        @map("payback_timeline")
  roiNotes            String?        @map("roi_notes")
  roiPercentage       Float?         @map("roi_percentage")
  outputs             DesignOutput[]
  parentDesign        Design?        @relation("DesignRegeneration", fields: [parentId], references: [id])
  childDesigns        Design[]       @relation("DesignRegeneration")
  profile             Profile        @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@index([createdAt])
  @@index([parentId])
  @@index([status])
  @@index([userId])
  @@map("designs")
}

model DesignOutput {
  id                   String   @id @default(uuid()) @db.Uuid
  designId             String   @map("design_id") @db.Uuid
  outputImageUrl       String   @map("output_image_url")
  variationName        String?  @map("variation_name")
  generationParameters Json?    @map("generation_parameters")
  createdAt            DateTime @default(now()) @map("created_at")
  design               Design   @relation(fields: [designId], references: [id], onDelete: Cascade)

  @@index([designId])
  @@map("design_outputs")
}

enum UserRole {
  CLIENT
  DESIGNER
  ADMIN
}

enum DesignStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  ARCHIVED
}
